-- Trials
create table trials
(
  trial     int,
  primary key (trial),
  info      varchar(255),
  t_date    datetime
) ;

-- Based on SKY record
-- The same SKY is in effect for multiple fixes
create table skies
(
    trial   int not null,
    sky_id    int not null,
    primary key(trial, sky_id),
    xdop    double,
    ydop    double,
    vdop    double,
    tdop    double,
    hdop    double,
    gdop    double,
    pdop    double
) ;

-- Array of SATS in SKY record
-- Variable number of satellites in each constellation
create table sats
(
    trial int not null,
    sat_id      int not null auto_increment,
    primary key(sat_id),
    sky_id int,
    foreign key (trial, sky_id) references skies(trial, sky_id) on delete cascade,
    prn     int,
    el      double,
    az      double,
    ss      double,
    used    int

) ;

-- Based on TPV record
-- Uses a constellation of satellites
create table fixes
(
    trial    int,
    fix_id  int not null auto_increment,
    primary key(fix_id),
    sky_id int,
    foreign key(trial, sky_id) references skies(trial, sky_id) on delete cascade,
    time    datetime,
    ept     double,
    lat     double,
    lon     double,
    alt     double,
    epx     double,
    epy     double,
    epv     double,
    track   double,
    speed   double,
    climb   double,
    eps     double
) ;

-- Centroid
create table centroid
(
    trial   int,
    primary key (trial),
    lat     double,
    lon     double,
    n       double
) ;

-- Trials
create table Trials
(
  trial     int,
  primary key (trial),
  info      varchar(255),
  t_date    datetime
) ;

-- Compute centroid values
insert into centroid
(
    lat,
    lon,
    n
)
select avg(lat), avg(lon), count(*) from fix ;

-- compute distances from centroid
select
    fix.lat,
    fix.lon,
    fix.sky_id,
    sqrt( pow(centroid.lat - fix.lat,2) + pow( centroid.lon - fix.lon,2)) as dist
from
    fix
join
    centroid
limit 5
;

-- Handy views
create or replace view nsatellites
as
    select
        satellites.sky_id,
        count(ss) n_sats,
        avg(ss)
    from
        satellites
    where
        satellites.used = '1'
    group by
        sky_id
;

create or replace view fixes as
    select
        fix.fix_id,
        fix.lat,
        fix.lon,
        fix.sky_id,
        sqrt( pow(centroid.lat - fix.lat,2) + pow( centroid.lon - fix.lon,2)) as dist,
        sqrt( pow(fix.epx,2) + pow( fix.epy,2)) as error,
        sky.pdop
    from
        fix
    join
        centroid
    inner join sky
        on fix.sky_id = sky.sky_id
 ;

create or replace view distances as
    select
        fix.lat,
        fix.lon,
        sqrt( pow(centroid.lat - fix.lat,2) + pow( centroid.lon - fix.lon,2)) as dist,
        sqrt( pow(fix.epx,2) + pow( fix.epy,2)) as error
    from
        fix
    join
        centroid
    inner join
        nsatellites on fix.sky_id = nsatellites.sky_id
    limit 10
;

-- errors
create or replace view errors as
    select
        avg( centroid.lat - fix.lat ) as lat_error,
        avg( centroid.lon - fix.lon ) as lon_error,
        std( centroid.lat - fix.lat ) as lat_std,
        std( centroid.lon - fix.lon ) as lon_std
     from
        fix
     join
        centroid
 ;

 -- Satellite locations
 create or replace view sat_view as
    select
        fix.time,
        satellites.prn,
        satellites.az,
        satellites.el,
        satellites.ss
     from
        fix
     inner join satellites
        on fix.sky_id = satellites.sky_id
     order by
        fix.time,
        satellites.prn
;
-- Data export stuff

select
    *
into outfile
    '/tmp/sat_view.csv'
    fields terminated by ','
    optionally enclosed by '"'
    lines terminated by '\n'
from
    sat_view
;

select
    *
into outfile
    '/tmp/distances2.csv'
    fields terminated by ','
    optionally enclosed by '"'
    lines terminated by '\n'
from
    fixes
inner join nsatellites
    on fixes.sky_id = nsatellites.sky_id
;

select
    prn,
    avg(el) as avg_el,
    count(*) as N
from
    satellites
where
    used = '1'
group by
    prn
;

-- Ref for polar sat plots
-- https://idefix.net/~koos/newsitem.cgi/1397679343
-- also
-- http://draebenstedt.de/skyline/skylineen.html
